/**
 * 基础的排序算法：
 * 1、选择排序
 * 2、插入排序：
*      很重要的性质：能够提前终止循环
 *     对于有序性比较强的数列，时间复杂度退化成O(n)
*      保证不要进行swap：这样能够比选择要快
 * *3、冒泡排序
 * *4、希尔排序
 *
 * 高级一些排序：
 * 1、归并排序
 *      优化思路：
 *      a、注意mid和mid+1两个元素有序时，不要merge了
 *      b、元素比较少时且近乎有序的数组，直接使用插入排序
 *      c、自底向上的归并排序：适用于链表的排序
 * 2、快速排序
 *      优化思路：（主要解决区分之后，两部分数据出现几个很多一个很少的情况）
 *      a、底层较少元素，使用插入排序方式
 *      b、近乎有序的序列快排优化：使用子数组的中间或者随机一个位置的元素作为哨兵
 *      c、大量重复数据的快排优化：使用两路快排、或者三路快排
*  3、求一个数组的第n大的数值：使用快速
 */
package sort;